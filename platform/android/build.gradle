Properties properties = new Properties()
properties.load(rootProject.file('local.properties').newDataInputStream())

def ndkClang = properties.getProperty('readium.ndk_clang', "false")
ndkClang = (ndkClang == "true") ? true : false;
rootProject.ext.set('readium_ndk_clang', ndkClang)

def ndkSkipX86 = properties.getProperty('readium.ndk_skipX86', "false")
ndkSkipX86 = (ndkSkipX86 == "true") ? true : false;
rootProject.ext.set('readium_ndk_skipX86', ndkSkipX86)

def ndkSkipARM = properties.getProperty('readium.ndk_skipARM', "false")
ndkSkipARM = (ndkSkipARM == "true") ? true : false;
rootProject.ext.set('readium_ndk_skipARM', ndkSkipARM)

def extraCmake = properties.getProperty('readium.extra_cmake', null)
rootProject.ext.set('readium_extra_cmake', extraCmake)

def readiumSdkLibDir = properties.getProperty('readium.sdk_lib_dir', null)
rootProject.ext.set('readium_sdk_lib_dir', readiumSdkLibDir)

def readiumSdkIncludeDir = properties.getProperty('readium.sdk_include_dir', null)
rootProject.ext.set('readium_sdk_include_dir', readiumSdkIncludeDir)

def lcpBuildContentFilter = false
if (readiumSdkLibDir != null && readiumSdkIncludeDir != null) {
    lcpBuildContentFilter = true
    rootProject.ext.set('readium_lcp_build_content_filter', true)
} else {
    rootProject.ext.set('readium_lcp_build_content_filter', false)
}

// println "[[${project.name}]] (ROOT) Gradle Experimental: ${ndkExperimental}"
println "[[${project.name}]] (ROOT) Skip ARM: ${ndkSkipARM}"
println "[[${project.name}]] (ROOT) Skip x86: ${ndkSkipX86}"
println "[[${project.name}]] (ROOT) Clang: ${ndkClang}"
println "[[${project.name}]] (ROOT) readiumSdkLibDir: ${readiumSdkLibDir}"
println "[[${project.name}]] (ROOT) readiumSdkIncludeDir: ${readiumSdkIncludeDir}"
println "[[${project.name}]] (ROOT) extraCmake: ${extraCmake}"

if (lcpBuildContentFilter) {
    // include ':epub3'
    // project(':epub3').projectDir = new File(rootProject.projectDir, './epub3')
}

buildscript {
    repositories {
        google()
        maven {
            url "https://maven.google.com"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        // https://bintray.com/android/android-tools/com.android.tools.build.gradle/view
        // https://mvnrepository.com/artifact/com.android.tools.build/gradle?repo=google
        classpath "com.android.tools.build:gradle:3.4.1"
    }
}

allprojects {
    repositories {
        google()
        maven {
            url "https://maven.google.com"
        }
        mavenCentral()
        jcenter()
    }
}
