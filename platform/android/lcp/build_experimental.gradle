// Copyright (c) 2016 Readium
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation and/or
//    other materials provided with the distribution.
// 3. Neither the name of the organization nor the names of its contributors may be
//    used to endorse or promote products derived from this software without specific
//    prior written permission
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

apply plugin: 'com.android.model.native'

model {
    android {
        compileSdkVersion = 23

        sources {
            main {
                jni {
                    source {
                        srcDirs = [
                                './src/main/jni',
                                '../../../src/lcp-client-lib',
                                '../../../src/lcp-content-filter',
                                '../../../src/third-parties/time64'
                        ]
                    }
                    exportedHeaders {
                        srcDir "./src/main/jni"
                    }
                    dependencies {
                        project ":epub3"
                    }
                }
            }
        }

        ndk {
            moduleName = "lcp"

            stl = "gnustl_shared"

            cppFlags.addAll([
                    "-std=gnu++11",
                    "-fpermissive",
                    "-fexceptions",
                    "-frtti",
                    "-fpic",
                    "-DFEATURES_READIUM",
                    "-I" + project(':epub3').projectDir +  "/include",
                    "-I${file("../../../src/lcp-client-lib")}".toString(),
                    "-I${file("../../../src/lcp-client-lib/public")}".toString(),
                    "-I${file("../../../src/lcp-content-filter")}".toString(),
                    "-I${file("../../../src/lcp-content-filter/public")}".toString(),
                    "-I${file("../../../src/third-parties")}".toString()
            ])
            ldLibs.addAll(['z', 'android', 'log', 'cryptopp', 'ziplib'])
        }

        buildTypes {
            release {

            }
            debug {
                ndk.with {
                    debuggable = true
                }
            }
        }

        productFlavors {
            create("arm") {
                ndk.with {
                    abiFilters.add("armeabi-v7a")
                    ldFlags.addAll([
                            "-L${file("./obj/local/armeabi-v7a")}".toString()
                    ])
                }
            }
            create("x86") {
                ndk.with {
                    abiFilters.add("x86")
                    ldFlags.addAll([
                            "-L${file("./obj/local/x86")}".toString()
                    ])
                }
            }
        }
    }
}